name: Build and Test

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  linux-build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Compute Version
      id: set-version
      run: |
        VERSION="0.0.${{ github.run_number }}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Build
      run: |
        dotnet restore
        dotnet build --configuration Release /p:Version="${{ env.VERSION }}" /p:AssemblyVersion="${{ env.VERSION }}" /p:FileVersion="${{ env.VERSION }}" /p:InformationalVersion="${{ env.VERSION }}" --no-restore
         
    - name: Upload NuGet Package
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: |
          NYaul/bin/Release/NYaul.*.nupkg
          NYaul/bin/Release/NYaul.*.snupkg
        retention-days: 30

  nuget-test:
    needs: linux-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Download NuGet Package
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: nuget-packages

    - name: Debug Directory Structure
      run: |
        pwd
        ls -la
        ls -la nuget-packages

    - name: Setup Local NuGet Source
      run: |
        NUGET_SOURCE="$PWD/nuget-packages"
        echo "Using additional NuGet source: $NUGET_SOURCE"
        # Add local source while keeping nuget.org
        dotnet nuget add source "$NUGET_SOURCE" --name local-packages

    - name: Replace Project Reference with NuGet Package
      env:
        VERSION: ${{ needs.linux-build.outputs.version }}
      run: |
        WORKSPACE="$PWD"
        TEST_PROJ="$WORKSPACE/NYaul.Tests/NYaul.Tests.csproj"
        NUGET_SOURCE="$WORKSPACE/nuget-packages"
        
        echo "Removing project reference..."
        dotnet remove "$TEST_PROJ" reference ../NYaul/NYaul.csproj
        
        echo "Adding NuGet package..."
        echo "Project: $TEST_PROJ"
        echo "Version: $VERSION"
        echo "Source: $NUGET_SOURCE"
        
        dotnet add "$TEST_PROJ" package NYaul --source "$NUGET_SOURCE" 

    - name: Run Tests
      run: dotnet test NYaul.Tests/NYaul.Tests.csproj --configuration Release

# Dry run:
# NYaul\bin\Release\NYaul.0.0.6.nupkg
# NYaul\bin\Release\NYaul.0.0.6.snupkg

# dotnet remove "NYaul.Tests/NYaul.Tests.csproj" reference "../NYaul/NYaul.csproj"
# dotnet add "NYaul.Tests/NYaul.Tests.csproj" package NYaul --version 0.0.6 --source ".\NYaul\bin\Release"