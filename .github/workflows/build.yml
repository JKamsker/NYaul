name: Build and Test

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Compute Version
      run: |
        VERSION="0.0.${{ github.run_number }}"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build
      run: |
        dotnet restore
        dotnet build --configuration Release /p:Version="${{ env.VERSION }}" /p:AssemblyVersion="${{ env.VERSION }}" /p:FileVersion="${{ env.VERSION }}" /p:InformationalVersion="${{ env.VERSION }}" --no-restore
         
    - name: Upload NuGet Package
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: |
          NYaul/bin/Release/NYaul.*.nupkg
          NYaul/bin/Release/NYaul.*.snupkg
        retention-days: 30

  nuget-test:
    needs: linux-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Download NuGet Package
      uses: actions/download-artifact@v4
      with:
        name: nuget-package
        path: nuget-packages

    - name: Setup Local NuGet Source
      run: |
        dotnet nuget add source $(pwd)/nuget-packages --name local-packages

    - name: Replace Project Reference with NuGet Package
      run: |
        cd NYaul.Tests
        dotnet remove reference ../NYaul/NYaul.csproj
        dotnet add package NYaul --version ${{ env.VERSION }} --source $(pwd)/../nuget-packages

    - name: Run Tests
      run: dotnet test NYaul.Tests/NYaul.Tests.csproj --configuration Release

